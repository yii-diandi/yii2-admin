<?php

namespace diandi\admin\models\searchs;

use common\components\DataProvider\ArrayDataProvider;
use diandi\admin\models\Menu as MenuModel;
use yii\data\ActiveDataProvider;
use yii\data\Pagination;

class StoreCategory    extends \diandi\addons\models\StoreCategory
{
        public function rules()
        {
            return parent::rules(); // TODO: Change the autogenerated stub
        }

    public function search($params)
   {

        $query = \diandi\addons\models\StoreCategory::find();

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
        ]);


        $this->load($params);

        if (!$this->validate()) {
            // uncomment the following line if you do not want to return any records when validation fails
            // $query->where('0=1');
            return false;
        }

        $count = $query->count();
        $pageSize =\Yii::$app->request->input('pageSize') ?? 10;
        $page =\Yii::$app->request->input('page') ?? 1;
        // 使用总数来创建一个分页对象
        $pagination = new Pagination([
            'totalCount' => $count,
            'pageSize' => $pageSize,
            'page' => $page - 1,
            // 'pageParam'=>'page'
        ]);

        $list = $query->offset($pagination->offset)
            ->asArray()
            ->all();



        $provider = new ArrayDataProvider([
            'key' => 'id',
            'allModels' => $list,
            'totalCount' => isset($count) ? $count : 0,
            'total' => isset($count) ? $count : 0,
            'sort' => [
                'attributes' => [
                    //'member_id',
                ],
                'defaultOrder' => [
                    //'member_id' => SORT_DESC,
                ],
            ],
            'pagination' => [
                'pageSize' => $pageSize,
            ],
        ]);

        return $provider->toArray();
    }

}